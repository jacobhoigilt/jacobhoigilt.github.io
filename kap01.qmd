# Kapittel 1: Bli kjent med redskapene dine 

## Forberedelser
Gå inn i filutforskeren din og opprett en mappe med navnet ```markdownkurs``` enten i OneDrive-området ditt eller hjemmeområdet på UiOs server (M:). Opprett deretter en undermappe med navn ```kap01```. Her skal du lagre dokumentene og andre filer du oppretter mens du jobber deg gjennom dette kapittelet.

## Den tekstlige treenighet
Vi trenger ett program for å skrive markdown-tekster, og så trenger vi to andre programmer for å omgjøre markdown-tekstene våre til ulike formater (som pdf, html, docx etc.) Til sammen lager disse programmene magi! Vi bruker tekstredigereren Visual Studio Code (VSCode) for å skrive, Pandoc for å omgjøre tekstene våre til ulike type filer, og kommandolinjen for å gi beskjeder til Pandoc. Kommandolinjen finnes allerede på alle datamaskiner, og de to andre programmene er gratis. Jeg skal presentere dem skikkelig etter tur, men først sørger vi for at vi har alle.

### Kommandolinjen
Kommandolinjen finner du på Windows ved å søke etter "Powershell" i søkevinduet nede til venstre. Det er lurt å høyreklikke og legge snarveien ned i oppgavelinjen, så det er enkelt tilgjengelig senere. På MacOS-maskiner ... Linux-brukere åpner terminalen. Da har vi kommandolinjen klar!

### Visual Studio Code
Du kan laste ned og installere VSCode fra UiOs Software Center. Hvis du ikke har brukt Software Center før, så finner du det ved å søke etter det i søkeboksen nede til venstre i Windows-skrivebordet. VSCode blir lastet ned og installert bare du dobbeltklikker på ikonet. VSCode er tekstredigeringsprogrammet vi skal bruke i hele dette kurset. Det finnes mange liknende programmer, som alle er gratis. Hvis du er kjent med tekstredigeringsprogrammer fra før og har en annen favoritt du heller vil bruke, er det selvsagt helt uproblematisk. Men skjermbildene jeg illustrerer med utover i boken er hentet fra VSCode. 

### Pandoc
Pandoc laster du ned fra https://pandoc.org/installing.html. Klikk på boksen "Download the latest installer". Da kommer du til en nettside som ser litt skremmende ut hvis man ikke er vant til åpen programvare. Men frykt ikke! Her er instruksjoner for de tre operativsystemene ved UiO:
- Windows: Finn filen som slutter med "x86_64.msi" og last den ned. Når du dobbeltklikker på filen i Utforsker/Explorer, så vil programmet installere seg selv.
- MacOS: Finn filen som slutter med "x86_64-macOS.pkg" og last den ned. Når du dobbeltklikker på filen i Finder, så vil programmet installere seg selv.
- Linux: De fleste Linux-distribusjoner har Pandoc inkludert, så du trenger ikke å gjøre noe.


### Til sist: en "pdf-motor"
For å kunne generere pdf-dokumenter med Pandoc, må du ha en "pdf-motor" (pdf engine) installert på maskinen. Det finnes flere slike. Vi skal bruke MikTex.

- Gå til den [offisielle nedlastingssiden](https://miktex.org/download) og trykk på "Download" under fanen Windows/Installer
- Åpne filen 
- Aksepter betingelsene, godta alle alternativene dialogboksen foreslår
- Vent. Det kan ta noen minutter å laste ned og installere alt, avhengig av båndbredden på nettet.
- Når installasjonen er ferdig og du har trykket "Next", vil programmet spørre deg om det skal se etter opppdateringer. Svar ja, og installer alt Miktex foreslår. Dette kan også ta litt tid
-  Du får ikke noen egen beskjed om at oppdateringen er ferdig - kanskje bare en melding om at MikTex-konsollen må lukkes. Klikk OK, og du er ferdig.

### Kommandolinjen: Skriv kommandoer istedenfor å peke og klikke
Kommandolinjen er den blanke skjermen som bare oppgir hvor i filsystemet du befinner deg, etterfulgt av en blinkende markør som signaliserer at maskinen venter på en kommando. Dette er den originale måten å kommunisere med datamaskiner på. 

![Illustrasjon: skjermbilde av terminal i Powershell og Linux](../illustrasjoner/kommandolinje_linux.png)

Kommandolinjen ser ikke spesielt fancy ut, men den er på ingen måte utdatert og brukes flittig av system-administratorer, programmerere og andre IT-folk. Kommandoene man skriver inn til maskinen utgjør et eget, enkelt kodespråk som er veldig effektivt for filbehandling i stor skala. På Windows-maskiner er dette språket Powershell, og på Linux- og MacOS-maskiner er det Bash. For våre formål er disse to språkene praktisk talt like.^[Hvis du vil lære deg mer om terminalen og Bash, så finnes det et fint nettkurs om det gjennom Carpentry på UiO, [her](https://swcarpentry.github.io/shell-novice/)] Man må bruke kommandolinjen for å kommunisere med Pandoc, for det er et program som ikke kommer med noe grafisk brukergrensesnitt (ingen klikk og pek-løsning, altså). Det er egentlig veldig fint, for det gir deg en anledning til å bli kjent med terminalen og kommandoene der, og på den måten bli bedre kjent med PCen din og dempe angsten for å gjøre noe feil. Det er nemlig veldig vanskelig å ødelegge noe i terminalen!

Så la oss hoppe i det. Åpne filutforskeren din og gå til mappen "markdownkurs", som du opprettet som en del av forberedelsene til dette kapitlet. Høyreklikk et sted i mappen, og velg "open in terminal" fra menyen. Nå har du åpnet terminalen, og du befinner deg i mappen "markdownkurs". La oss leke oss litt her for å bli vant til terminalen. Begynn med å skrive inn "cd ..". Dette står for "change directory", og mellomrommet og de to punktumene betyr at du gir maskinen beskjed om å hoppe et nivå opp i filsystemet. Prøv nå å skrive "ls". Det står for "list" og gir deg en liste over hvilke filer og mapper som finnes der du er nå. Blant mappene vil du se "markdownkurs". Hvis du nå skriver "cd markdownkurs" gir du maskinen beskjed om å ta deg til mappen "markdownkurs". Nå er vi tilbake der vi begynte. Du ser at det vi gjør her er akkurat som når vi klikker og peker i filutforskeren, bare at her bruker vi tekstkommandoer istedenfor å klikke på bilder av mapper. Det er en haug av ting du kan få gjort med kommandolinjen, men det er ingen vits i å gå inn på dem her. Det vi skal gjøre nå, er å bruke terminalen til å lage en ny, tom markdownfil og samtidig åpne VSCode for å redigere den filen.  

### VSCode: Lag ditt første markdown-dokument
For å åpne VSCode fra kommandolinjen, trenger du bare å skrive ```code``` og trykke Enter. Men vi skal gjøre det enda mer effektivt. Du kan nemlig åpne VSCode og opprette et markdown-dokument samtidig. Det gjør det ved å skrive ```code første_dokument.md``` (du kan selvfølgelig velge et annet navn, men det er viktig at det slutter på .md). Nå åpner datamaskinen VSCode med den nye markdown-filen du skal skrive. Du kan selvsagt også åpne VSCode fra filutforskeren i Windows/MacOS, slik som du pleier å åpne programmer. Men kommandolinjen er en effektiv måte å åpne både programmet og en ny fil på samtidig, og så er det fint å bli vant til å bruke den.

OK, da går vi i gang med å lage et lite dokument som viser fram hvordan Markdown fungerer når du skal formatere tekst. Det er snakk om enkle tegn og beskjeder som vil tolkes av Pandoc når vi skal konvertere til et annet filformat.

Vi begynner med å skrive et lite "forord", en YAML-overskrift, som inneholder tittelen på dokumentet og annen informasjon om det. Vi skal lære mer om dette forordet og YAML senere. Nå trenger du bare å skrive følgende - nøyaktig slik som du ser her (men med din egen overskrift og navn, selvsagt):
```
---
title: Mitt første Markdown-dokument
author: Jacob Høigilt
date: 18. februar 2024
---
```

Dette lille "forordet" til dokumentet ditt er viktig, siden informasjonen der vil reflekteres i det ferdige produktet, enten du nå velger å realisere teksten som et Word-dokument, i html- eller pdf-format.

Trykk Enter for å få en tom linje mellom forordet og resten av dokument, og prøv nå å skrive en liten tekst med et par overskrifter og litt formatering. Her er et eksempel som du kan reprodusere hvis du ikke føler kreativiteten strømme på:

```
# Innledning

Markdown er et nyttig format for akademikere som vil ha full kontroll over sin egen tekst og hvordan den reproduseres.

# Eksempler på Markdown-formatering

## Kursiv
For å få kursiv bruker vi *asterisk* før og etter teksten vi ønsker i kursiv.

## Fet skrift
For å få fet skrift bruker vi **to asterisker** før og etter teksten vi ønsker i fete typer.

## Tabeller

Du kan lage enkle tabeller i Markdown på følgende måte:

| Frukt | Antall | Kvalitet |
|-------|--------|----------|
| Banan | 5      | God      |
| Eple  | 3      | Dårlig   |
| Pære  | 2      | God      |

Over er et eksempel på en enkel tabell.

```

Det var det! Da har du ditt første dokument klart. Nå må vi bare lagre det. Det kan du gjøre hvordan du vil. I de aller fleste skriveprogrammer er snarveien ctrl+S. Da vil den nåværende versjonen av filen lagres med det navnet den allerede har fått.

### Pandoc: Tekstkonverterings-maskinen
Nå er det tid for å omsette dokumentet ditt i en eller annen form som kan publiseres - og det er typisk sett enten i word-format, som nettside eller som et pdf-dokument. Vi skal prøve alle tre etter tur. 

Teksten du har skrevet er som tidligere nevnt råtekst, helt uten formatering eller grafisk pynt. Når man skriver korte notater til seg selv trenger man gjerne ikke noe mer enn slik råtekst, men så snart du vil vise teksten til andre vil du jo ønske å ha den i et pent og ryddig format. 

Det er her Pandoc kommer inn. Pandoc er et program som omformer din Markdown-tekst til forskjellige velkjente formater. På denne måten vil du alltid ha en "grunntekst" som du kan bruke og gjenbruke i forskjellige tekster og forskjellige formater med enkel klipp-og-lim, og så kan Pandoc realisere teksten i ulike grafiske former. 

Pandoc er et kommandolinje-program, så nå skal vi tilbake i kommandolinjen. Bruk Alt+Tab for å komme deg tilbake til kommandolinje-vinduet. (Dersom du var litt rask og lukket kommandolinjen tidligere, så navigerer du bare til undermappen "kap01" i mappen "markdownkurs", som vi opprettet til å begynne med. Høyreklikk og velg "åpne powershell" eller den engelske ekvivalenten, alt etter hvilket språk du har Windows på.) 

Pandoc er allerede installert, så det er klart til å brukes. I kommandolinjen starter man gjerne med å si fra hviklet program man vil snakke med. Kommandoen du nå skal skrive inn ser slik ut:
```
pandoc første_dokument.md -o første_dokument.docx
```
Oversatt fra kommandolinjespråket betyr dette noe sånt som: "Pandoc! Jeg vil at du skal ta filen første_dokument.md, omforme den og produsere den som en Word-fil med navn første_dokument.docx" (-o her står for "output").

Nå trykker du Enter. Hvis det ikke skjer noe annet enn at du får en ny linje og blinkende markør i kommandolinjen har alt gått etter planen. Dataspråk er økonomisk og rapporterer vanligvis ikke dersom alt går som det skal - no news is good news. Men noe har skjedd! Hvis du nå skriver ```ls``` i kommandolinjen, altså kommandoen for å se hvilke filer som finnes i mappen, så vil du se en ny fil: første_dokument.docx. Du kan se det samme hvis du bruker filutforskeren i Windows. Gjør det, og dobbeltklikk på filen. Hva skjer? ...Stilig, ikke sant?

Det er *veldig* enkelt å få Pandoc til å omforme Markdown-teksten vår til andre formater også, så la oss gjøre det med én gang. I samme slengen kan jeg illustrere en av de store fordelene med å bruke Powershell eller Bash. 

La oss si at vi ønsker å lage en pdf-versjon av dokumentet, slik at du kan printe den ut og stolt vise til familien din at du er en ekspert på rentekst. Det eneste vi trenger å endre i kommandoen er da filbetegnelsen, fra .docx til .pdf, slik:
```
pandoc første_dokument.md -o første_dokument.pdf
```

Powershell og Bash husker kommandoer langt tilbake i tid, så det eneste du trenger å gjøre i terminalen er å trykk piltast opp. Da kommer forrige kommando til syne. Du visker enkelt og greit ut docx og erstatter dem med pdf. Så trykker du Enter igjen. Voilà! Du kan nå åpne pdf-filen fra filutforskeren i ditt pdf-program (på UiO-maskiner er det stort sett Adobe Acrobat).

På nøyaktig samme måte kan du lage en nettside-fil (.html). Disse filene åpnes automatisk i nettleseren din når du dobbeltklikker på dem. Nettsiden du får opp ser ganske enkel og stusslig ut, men vi kommer snart til måter å gjøre slike sider penere. 


